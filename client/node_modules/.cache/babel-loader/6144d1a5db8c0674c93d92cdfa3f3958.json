{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javis\\\\Desktop\\\\Georgia Tech Bottcamp\\\\HouseParty\\\\client\\\\src\\\\components\\\\Foul.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\"; // import { Link } from \"react-router-dom\";\n// import { useMutation } from \"@apollo/client\";\n\nimport { Context } from \"../utils/GlobalState\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_PARTY } from \"../utils/queries\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Foul = () => {\n  _s();\n\n  //   const [formState, setFormState] = useState({ name: \"\", partyId: \"\" });\n  //   const [addRule, { error }] = useMutation(ADD_RULE);\n  const [state, setState] = useContext(Context);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERY_PARTY, {\n    variables: {\n      id: state.partyId\n    }\n  });\n  if (loading) return \"Loading\";\n  if (error) return `${error.message}`; //   console.log(data.party.rules);\n\n  const ruleList = (data === null || data === void 0 ? void 0 : data.party.rules) || [];\n  const listRules = ruleList.map(rule => /*#__PURE__*/_jsxDEV(\"button\", {\n    children: rule.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 44\n  }, this)); //   const handleFormSubmit = async (event) => {\n  //     event.preventDefault();\n  //     console.log(state.userId);\n  //     try {\n  //       const mutationResponse = await addRule({\n  //         variables: { name: formState.name, partyId: state.partyId },\n  //       });\n  //     } catch (e) {\n  //       console.log(e);\n  //     }\n  //   };\n  //   const handleChange = (event) => {\n  //     const { name, value } = event.target;\n  //     setFormState({\n  //       ...formState,\n  //       [name]: value,\n  //     }):\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: listRules\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Foul, \"xp+l60UxnZhBwAuRF45pyIV8rF8=\", false, function () {\n  return [useQuery];\n});\n\n_c = Foul;\nexport default Foul;\n\nvar _c;\n\n$RefreshReg$(_c, \"Foul\");","map":{"version":3,"sources":["C:/Users/javis/Desktop/Georgia Tech Bottcamp/HouseParty/client/src/components/Foul.js"],"names":["React","useContext","useState","Context","useQuery","QUERY_PARTY","Foul","state","setState","loading","error","data","variables","id","partyId","message","ruleList","party","rules","listRules","map","rule","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C,C,CACA;AACA;;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,UAAU,CAACE,OAAD,CAApC;AAEA,QAAM;AAAEM,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BP,QAAQ,CAACC,WAAD,EAAc;AACrDO,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEN,KAAK,CAACO;AAAZ;AAD0C,GAAd,CAAzC;AAGA,MAAIL,OAAJ,EAAa,OAAO,SAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,GAAEA,KAAK,CAACK,OAAQ,EAAxB,CATM,CAWjB;;AAEA,QAAMC,QAAQ,GAAG,CAAAL,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEM,KAAN,CAAYC,KAAZ,KAAqB,EAAtC;AAEA,QAAMC,SAAS,GAAGH,QAAQ,CAACI,GAAT,CAAcC,IAAD,iBAAU;AAAA,cAASA,IAAI,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,UAAvB,CAAlB,CAfiB,CAiBjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,sBAAO;AAAA,cAAMH;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApCD;;GAAMb,I;UAK6BF,Q;;;KAL7BE,I;AAsCN,eAAeA,IAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\n// import { useMutation } from \"@apollo/client\";\nimport { Context } from \"../utils/GlobalState\";\nimport { useQuery } from \"@apollo/client\";\n\nimport { QUERY_PARTY } from \"../utils/queries\";\n\nconst Foul = () => {\n  //   const [formState, setFormState] = useState({ name: \"\", partyId: \"\" });\n  //   const [addRule, { error }] = useMutation(ADD_RULE);\n  const [state, setState] = useContext(Context);\n\n  const { loading, error, data } = useQuery(QUERY_PARTY, {\n    variables: { id: state.partyId },\n  });\n  if (loading) return \"Loading\";\n  if (error) return `${error.message}`;\n\n  //   console.log(data.party.rules);\n\n  const ruleList = data?.party.rules || [];\n\n  const listRules = ruleList.map((rule) => <button>{rule.name}</button>);\n\n  //   const handleFormSubmit = async (event) => {\n  //     event.preventDefault();\n  //     console.log(state.userId);\n  //     try {\n  //       const mutationResponse = await addRule({\n  //         variables: { name: formState.name, partyId: state.partyId },\n  //       });\n  //     } catch (e) {\n  //       console.log(e);\n  //     }\n  //   };\n\n  //   const handleChange = (event) => {\n  //     const { name, value } = event.target;\n  //     setFormState({\n  //       ...formState,\n  //       [name]: value,\n  //     }):\n  return <div>{listRules}</div>;\n};\n\nexport default Foul;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javis\\\\Desktop\\\\Georgia Tech Bottcamp\\\\HouseParty\\\\client\\\\src\\\\components\\\\NewParty.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { Context } from \"../utils/GlobalState\";\nimport { ADD_PARTY } from \"../utils/mutations\"; // import { QUERY_RULE, QUERY_MINE } from \"../utils/queries\";\n\nimport Auth from \"../utils/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewParty = props => {\n  _s();\n\n  // const [ruleText, setRuleText] = useState(\"\");\n  // const [addRule, { error }] = useMutation(RULE, {\n  //   update(cache, { data: { addRule } }) {\n  //     try {\n  //       const { rules } = cache.readQuery({ query: QUERY_RULE });\n  //       cache.writeQuery({\n  //         query: QUERY_RULE,\n  //         data: { rules: [addRule, ...rules] },\n  //       });\n  //     } catch (e) {\n  //       console.error(e);\n  //     }\n  //     // need a me object to update cache with new rules\n  //     const { mine } = cache.readQuery({ query: QUERY_MINE });\n  //     cache.writeQuery({\n  //       query: QUERY_MINE,\n  //       data: { mine: { ...mine, rules: [...mine.rules, addRule] } },\n  //     });\n  //   },\n  // });\n  // const handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n  //   try {\n  //     const { data } = await addRule({\n  //       variables: {\n  //         ruleText,\n  //       },\n  //     });\n  //     setRuleText(\"\");\n  //   } catch (err) {\n  //     console.err(err);\n  //   }\n  // };\n  // const handleChange = (event) => {\n  //   const { foul, value } = event.target;\n  //   if (foul === \"ruleText\" && value.length <= 200) {\n  //     setRuleText(value);\n  //     setLetterCount(value.length);\n  //   }\n  // };\n  const [formState, setFormState] = useState({\n    name: \"\"\n  });\n  const [newParty, {\n    error\n  }] = useMutation(ADD_PARTY);\n  const [state, setState] = useContext(Context);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      const mutationResponse = await newParty({\n        variables: {\n          name: formState.name\n        }\n      });\n      const partyNum = mutationResponse.data.addParty._id;\n      setState({\n        partyId: partyNum\n      });\n      console.log(state.partyId);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormState({ ...formState,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Auth.loggedIn() ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"flex-row justify-center justify-space-between-md align-center\",\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-9\",\n          id: \"createParty\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Create a new Party \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            placeholder: \"Party Name\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-lg-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \" py-3\",\n            type: \"submit\",\n            children: \"Add Party\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 my-3 bg-danger text-white p-3\",\n          children: error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Please login to add your party foul trigger. You can\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signin\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), \" or \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"signup.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewParty, \"cHaU1grRrwIIMyTdwdXHXWh5BC8=\", false, function () {\n  return [useMutation];\n});\n\n_c = NewParty;\nexport default NewParty;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewParty\");","map":{"version":3,"sources":["C:/Users/javis/Desktop/Georgia Tech Bottcamp/HouseParty/client/src/components/NewParty.js"],"names":["React","useState","useContext","Link","useMutation","Context","ADD_PARTY","Auth","NewParty","props","formState","setFormState","name","newParty","error","state","setState","handleFormSubmit","event","preventDefault","mutationResponse","variables","partyNum","data","addParty","_id","partyId","console","log","e","handleChange","value","target","loggedIn","message"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { Context } from \"../utils/GlobalState\";\n\nimport { ADD_PARTY } from \"../utils/mutations\";\n// import { QUERY_RULE, QUERY_MINE } from \"../utils/queries\";\n\nimport Auth from \"../utils/auth\";\n\nconst NewParty = (props) => {\n  // const [ruleText, setRuleText] = useState(\"\");\n\n  // const [addRule, { error }] = useMutation(RULE, {\n  //   update(cache, { data: { addRule } }) {\n  //     try {\n  //       const { rules } = cache.readQuery({ query: QUERY_RULE });\n\n  //       cache.writeQuery({\n  //         query: QUERY_RULE,\n  //         data: { rules: [addRule, ...rules] },\n  //       });\n  //     } catch (e) {\n  //       console.error(e);\n  //     }\n\n  //     // need a me object to update cache with new rules\n\n  //     const { mine } = cache.readQuery({ query: QUERY_MINE });\n  //     cache.writeQuery({\n  //       query: QUERY_MINE,\n  //       data: { mine: { ...mine, rules: [...mine.rules, addRule] } },\n  //     });\n  //   },\n  // });\n\n  // const handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   try {\n  //     const { data } = await addRule({\n  //       variables: {\n  //         ruleText,\n  //       },\n  //     });\n\n  //     setRuleText(\"\");\n  //   } catch (err) {\n  //     console.err(err);\n  //   }\n  // };\n\n  // const handleChange = (event) => {\n  //   const { foul, value } = event.target;\n\n  //   if (foul === \"ruleText\" && value.length <= 200) {\n  //     setRuleText(value);\n  //     setLetterCount(value.length);\n  //   }\n  // };\n\n  const [formState, setFormState] = useState({ name: \"\" });\n  const [newParty, { error }] = useMutation(ADD_PARTY);\n  const [state, setState] = useContext(Context);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await newParty({\n        variables: { name: formState.name },\n      });\n      const partyNum = mutationResponse.data.addParty._id;\n      setState({ partyId: partyNum });\n      console.log(state.partyId);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div>\n      {Auth.loggedIn() ? (\n        <>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\" id=\"createParty\">\n              <h1>Create a new Party </h1>\n              <input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                placeholder=\"Party Name\"\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"col-12 col-lg-3\">\n              <button className=\" py-3\" type=\"submit\">\n                Add Party\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          Please login to add your party foul trigger. You can{\" \"}\n          <Link to=\"/signin\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default NewParty;\n"]},"metadata":{},"sourceType":"module"}